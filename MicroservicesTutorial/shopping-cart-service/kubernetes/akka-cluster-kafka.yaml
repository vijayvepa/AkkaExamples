apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: shopping-cart
  name: shopping-cart
  namespace: shopping-cart-k
spec:
  replicas: 2
  selector:
    matchLabels:
      app: shopping-cart
  template:
    metadata:
      labels:
        app: shopping-cart
    spec:
      containers:
        - name: shopping-cart
          image: docker.io/vijayvepa/shopping-cart-service:latest
          readinessProbe:
            httpGet:
              path: /ready
              port: management
          livenessProbe:
            httpGet:
              path: /alive
              port: management
            periodSeconds: 10
            failureThreshold: 10
            initialDelaySeconds: 20
          ports:
            - name: management
              containerPort: 10558
              protocol: TCP
            - name: http
              containerPort: 10080
              protocol: TCP
          resources:
            limits:
              memory: 1024Mi
            requests:
              cpu: 1
              memory: 1024Mi
        - name: postgres-db
          image: postgres:latest
          ports:
            - name: database
              containerPort: 5432
              protocol: TCP
          resources:
            limits:
              memory: 1024Mi
            requests:
              cpu: 1
              memory: 1024Mi
        - name: zookeeper
          image: zookeeper:3.6.2
          ports:
            - name: zoo
              containerPort: 2181
              protocol: TCP
          resources:
            limits:
              memory: 1024Mi
            requests:
              cpu: 1
              memory: 1024Mi
        - name: kafka
          image:  wurstmeister/kafka:2.13-2.7.0
          ports:
            - name: kafka
              containerPort: 9092
              protocol: TCP
          env:
            - name: KAFKA_ADVERTISED_HOST_NAME
              value: localhost
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper:2181
          resources:
            limits:
              memory: 1024Mi
            requests:
              cpu: 1
              memory: 1024Mi

---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pod-reader
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["pods"]
    verbs: ["get", "watch", "list"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: read-pods
subjects:
  # Uses the default service account.
  # Consider creating a dedicated service account to run your
  # Akka Cluster services and binding the role to that one.
  - kind: ServiceAccount
    name: default
roleRef:
  kind: Role
  name: pod-reader
  apiGroup: rbac.authorization.k8s.io